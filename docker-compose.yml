---
version: '3.8'

services:
    zookeeper:
        image: confluentinc/cp-zookeeper:5.4.2
        hostname: zookeeper
        container_name: zookeeper
        restart: unless-stopped
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_IP: {MY_IPAddress}
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
            ZOO_LOG4J_PROP: ERROR

        volumes:
            - zookeeper_data:/var/lib/zookeeper/data
            - zookeeper_log:/var/lib/zookeeper/log
            - zookeeper_secrets:/etc/zookeeper/secrets

    broker:
        image: confluentinc/cp-enterprise-kafka:5.4.2
        hostname: broker
        container_name: broker
        restart: unless-stopped
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
            - "9992:9992"
            - "29092:29092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_BROKER_RACK: "1"
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"

            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://{MY_IPAddress}:29092,PLAINTEXT_HOST://{MY_IPAddress}:9092
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

            KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
            KAFKA_DELETE_TOPIC_ENABLE: "true"
            KAFKA_DEFAULT_REPLICATION_FACTOR: 1

            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

            KAFKA_JMX_PORT: 9992
            KAFKA_JMX_HOSTNAME: {MY_IPAddress}

            CONFLUENT_METRICS_REPORTER_MAX_REQUEST_SIZE: 10485760

            KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
            KAFKA_LOG4J_ROOT_LOGLEVEL: INFO

            # Schema Validation
            KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://{MY_IPAddress}:8081
            KAFKA_CONFLUENT_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
            KAFKA_CONFLUENT_BASIC_AUTH_USER_INFO: 'rtglocal:rtglocal'

            # Confluent Metrics Reporter
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
            CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
            CONFLUENT_METRICS_ENABLE: "true"
            CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

        volumes:
            - broker_data:/var/lib/kafka/data
            - broker_secrets:/etc/kafka/secrets

    schema-registry:
        image: rtgintegrations/confluentinc-cp-schema-registry:5.4.2-dev
        hostname: schema-registry
        container_name: schema-registry
        restart: unless-stopped
        depends_on:
            - broker
        ports:
            - "8081:8081"
        environment:
            SCHEMA_REGISTRY_HOST_NAME: schema-registry
            SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
            SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "{MY_IPAddress}:29092"
            LOG4J_ROOT_LOGLEVEL: ERROR

        volumes:
            - schema-registry:/etc/schema-registry/secrets

    connect:
        image: rtgintegrations/confluentinc-cp-kafka-connect:5.4.2-dev
        hostname: connect
        container_name: connect
        restart: unless-stopped
        depends_on:
            - broker
            - schema-registry
        ports:
            - "8083:8083"
        environment:
            CONNECT_BOOTSTRAP_SERVERS: "{MY_IPAddress}:29092"
            CONNECT_ZOOKEEPER_CONNECT: "zookeeper:2181"
            CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
            CONNECT_REST_PORT: 8083
            CONNECT_GROUP_ID: "connect-cluster"
            CONNECT_AUTO_REGISTER_SCHEMAS: "false"

            #CONNECT_LISTENERS: https://0.0.0.0:8083

            CONNECT_REPLICATION_FACTOR: 1
            CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
            CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_CONFIG_STORAGE_PARTITIONS: 5
            CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
            CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_OFFSET_STORAGE_PARTITIONS: 5
            CONNECT_STATUS_STORAGE_TOPIC: connect-statuses
            CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_STATUS_STORAGE_PARTITIONS: 5

            CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
            CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://{MY_IPAddress}:8081"
            CONNECT_KEY_CONVERTER_AUTO_REGISTER_SCHEMAS: "false"
            CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
            CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: "rtglocal:rtglocal"

            CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
            CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://{MY_IPAddress}:8081"
            CONNECT_VALUE_CONVERTER_AUTO_REGISTER_SCHEMAS: "false"
            CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
            CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: "rtglocal:rtglocal"

            CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
            CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"

            CLASSPATH: "/usr/share/java/monitoring-interceptors/*"

            # Connect Producer
            CONNECT_PRODUCER_CLIENT_ID: "connect-worker"
            CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"

            # Connect Consumer
            CONNECT_CONSUMER_ISOLATION_LEVEL: read_committed
            CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"

            CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components,/etc/kafka-connect/jars,/etc/kafka-connect/jars"
            CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
            #CONNECT_LOG4J_LOGGERS: org.reflections=ERROR

        volumes:
            - connect_data:/var/lib/kafka/data
            - connect_secrets:/etc/kafka-connect/secrets
            - connect_jars:/etc/kafka-connect/jars
            - kafka_secrets:/etc/kafka/secrets

    ksqldb-server:
        image: rtgintegrations/confluentinc-cp-ksqldb-server:5.5.2-dev
        hostname: ksqldb-server
        container_name: ksqldb-server
        restart: unless-stopped
        depends_on:
            - broker
            - connect
        ports:
            - "8088:8088"
        environment:
            KSQL_LOG4J_ROOT_LOGLEVEL: INFO
            KSQL_KSQL_SERVICE_ID: "ksql-cluster"
            KSQL_HOST_NAME: ksqldb-server
            KSQL_LISTENERS: "http://0.0.0.0:8088"
            KSQL_BOOTSTRAP_SERVERS: "{MY_IPAddress}:29092"
            KSQL_KSQL_CONNECT_URL: "http://connect:8083"

            KSQL_KSQL_STREAMS_AUTO_OFFSET_RESET: earliest
            KSQL_KSQL_STREAMS_REPLICATION_FACTOR: 1
            KSQL_KSQL_INTERNAL_TOPIC_REPLICAS: 1
            KSQL_CACHE_MAX_BYTES_BUFFERING: 0

            KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://{MY_IPAddress}:8081"
            KSQL_KSQL_SCHEMA_REGISTRY_BASIC_AUTH_CREDENTIALS_SOURCE: "USER_INFO"
            KSQL_KSQL_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: "rtglocal:rtglocal"

            KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
            KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"

            KSQL_PRODUCER_ENABLE_IDEMPOTENCE: 'true'
            KSQL_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"

            KSQL_CONFIG_DIR: "/etc/ksqldb"
            KSQL_AUTHENTICATION_METHOD: BASIC
            KSQL_AUTHENTICATION_ROLES: admin,user #comma-separed list of user roles
            KSQL_AUTHENTICATION_REALM: KsqlServer-Props

    kafka-magic:
        image: digitsy/kafka-magic:2.0.3.4
        hostname: kafka-magic
        container_name: kafka-magic
        restart: always
        ports:
            - "8080:80"
        environment:
            KMAGIC_ALLOW_TOPIC_DELETE: "true"
            KMAGIC_CONFIG_STORE_TYPE: "file"
            KMAGIC_CONFIG_STORE_CONNECTION: "Data Source=/config/KafkaMagicConfig.db;"
            KMAGIC_CONFIG_ENCRYPTION_KEY: "a85450efd02a6174bf8e3c231dc4ea217d56d5029b2d70e5a2efd3d3dd6dc116"
        volumes:
        - kmagic_config:/config

volumes:
    zookeeper_data: {}
    zookeeper_log: {}
    zookeeper_secrets: {}
    schema-registry: {}
    broker_data: {}
    broker_secrets: {}
    connect_data: {}
    connect_secrets: {}
    connect_jars: {}
    kafka_secrets: {}
    kmagic_config: {}
